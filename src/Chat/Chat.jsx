import React from 'react'


//material ui comp
import Box from '@mui/material/Box';
import TextField from '@mui/material/TextField';
import CssBaseline from '@mui/material/CssBaseline';
import Paper from '@mui/material/Paper';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemAvatar from '@mui/material/ListItemAvatar';
import ListItemText from '@mui/material/ListItemText';
import Avatar from '@mui/material/Avatar';
import './Chat.scss'
import { Typography } from '@mui/material';




function refreshMessages() {
    const getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max));

    return Array.from(new Array(50)).map(
        () => messageExamples[getRandomInt(messageExamples.length)],
    );
}

export default function Chat() {

    const [value, setValue] = React.useState(0);
    const ref = React.useRef();
    const [messages, setMessages] = React.useState(() => refreshMessages());

    React.useEffect(() => {
        ref.current.scrollTop = 0;
        setMessages(refreshMessages());
    }, [value, setMessages]);

    return (
        <Box className="chat-container" ref={ref}>
            <CssBaseline />
            <Box className="chat-title" component="section">
                <Box className="children">
                    <Typography>
                        general
                    </Typography>
                </Box>
                <Box className="toolbar">

                </Box>
            </Box>
            <Box className="content">
                <Box className="chat-content" component="main">
                    <Box className="messageWrapper">
                        <Box className="messageScroller">
                            <Box className="scroll-content">
                                <List component="ol" className="scrollerInner">
                                    {messages.map(({ primary, secondary, person }, index) => (
                                        <Box component="li" className="message">
                                            <ListItem key={index + person}>
                                                <ListItemAvatar>
                                                    <Avatar alt="Profile Picture" src={person} />
                                                </ListItemAvatar>
                                                <ListItemText primary={primary} secondary={secondary} />
                                            </ListItem>
                                        </Box>
                                    ))}
                                    <Box className="scrollerSpacer"></Box>
                                </List>
                            </Box>
                        </Box>
                    </Box>
                </Box>
            </Box>
            <Box className="form" component="form">
                <TextField type="chat" className="textArea" sx={{ backgroundColor: "hsl(225, 7%, 24%)", }} />
            </Box>
        </Box>

    )
}

const messageExamples = [
    {
        primary: 'Brunch this week?',
        secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
        person: '/static/images/avatar/5.jpg',
    },
    {
        primary: 'Birthday Gift',
        secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
        person: '/static/images/avatar/1.jpg',
    },
    {
        primary: 'Recipe to try',
        secondary: 'I am try out this new BBQ recipe, I think this might be amazing',
        person: '/static/images/avatar/2.jpg',
    },
    {
        primary: 'Yes!',
        secondary: 'I have the tickets to the ReactConf for this year.',
        person: '/static/images/avatar/3.jpg',
    },
    {
        primary: "Doctor's Appointment",
        secondary: 'My appointment for the doctor was rescheduled for next Saturday.',
        person: '/static/images/avatar/4.jpg',
    },
    {
        primary: 'Discussion',
        secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
        person: '/static/images/avatar/5.jpg',
    },
    {
        primary: 'Summer BBQ',
        secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
        person: '/static/images/avatar/1.jpg',
    },
];
